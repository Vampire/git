#!/bin/bash

config() {
	sed -ne "s/^$1//p" .git/private 2>/dev/null
}

branches() {
	comm -23 <((Meta/topics; config +) | sort) <(config - | sort)
}

upstream=`git for-each-ref --format='%(upstream)' refs/heads/private`
upstream=${upstream:-origin}

cont=
force=
case "$1" in
--continue)
	cont=t
	shift
	;;
-f)
	force=t
	shift
	;;
esac

if test -z "$cont"; then
	test -z "$force" &&
	test -n "`git rev-list -1 --no-merges --first-parent \
		 $upstream..private`" &&
	  {
		  git log --no-merges --first-parent $upstream..private
		  exit 1
	  }
	git checkout -q ${force:+-f} $upstream^0 || exit
else
	git checkout -q ${force:+-f} private^0 || exit
fi

for i in `branches`; do
	echo >&2 Merging $i...
	if ! git rev-parse -q --verify "$i" >/dev/null; then
		i=`git for-each-ref --format='%(refname:short)' refs/remotes |
		   grep -m 1 "/$i\$"`
		echo >&2 Local branch not found, using $i...
	fi
	if ! git merge --no-ff $i; then
		if test -z "`git ls-files -u`"; then
			echo >&2 Auto-committing rerere merge...
			GIT_EDITOR=true git commit || exit 1
		else
			exit 1
		fi
	fi
done

git branch -f private &&
git checkout private || exit
echo All branches merged successfully.
exit 0
