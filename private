#!/bin/sh

branches() {
	sed -n <Meta/branches \
	    -e '/^[^ \t-]/p'
}

upstream=`git for-each-ref --format='%(upstream)' refs/heads/private`
upstream=${upstream:-origin}

case "$1" in
--continue)
	shift
	;;
*)
	test "$1" != "-f" &&
	test -n "`git rev-list -1 --no-merges --first-parent \
		 $upstream..private`" &&
	  {
		  git log --no-merges --first-parent $upstream..private
		  exit 1
	  }
	git checkout private &&
	git reset --hard $upstream || exit
esac

for i in `branches`; do
	echo >&2 Merging $i...
	if ! git rev-parse -q --verify "$i"; then
		i=`git for-each-ref --format='%(refname:short)' refs/remotes |
		   grep -m 1 "/$i\$"`
		echo >&2 Local branch not found, using $i...
	fi
	if ! git merge --no-ff $i; then
		if test -z "`git ls-files -u`"; then
			echo >&2 Auto-committing rerere merge...
			GIT_EDITOR=true git commit || exit 1
		else
			exit 1
		fi
	fi
done
echo All branches merged successfully.
exit 0
